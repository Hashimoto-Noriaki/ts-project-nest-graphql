name: CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: nori_user
          POSTGRES_PASSWORD: nori_pass
          POSTGRES_DB: noridb
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Set environment variables
        run: |
          echo "DATABASE_URL=postgresql://nori_user:nori_pass@localhost:5432/noridb" > .env

      - name: Run Prisma Migrations
        run: |
          cd backend
          npx prisma migrate dev --name init --skip-generate

      - name: Lint and Format Code
        run: |
          cd backend
          npx eslint . --fix
          npx prettier --write .

      - name: Run backend tests
        run: |
          cd backend
          npm run test

  # Uncomment when frontend is implemented
  # frontend:
  #   name: Frontend Tests
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 20

  #     - name: Install frontend dependencies
  #       run: |
  #         cd frontend
  #         npm install

  #     - name: Lint and Format Code
  #       run: |
  #         cd frontend
  #         npx eslint . --fix
  #         npx prettier --write .

  #     - name: Run frontend tests
  #       run: |
  #         cd frontend
  #         npm run test

